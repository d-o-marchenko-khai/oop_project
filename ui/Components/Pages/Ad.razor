@page "/ad/{Id:guid}"
@using oop_project
@inject NavigationManager Navigation
@rendermode InteractiveServer

@code {
    [Parameter]
    public Guid Id { get; set; }
    private Advertisement? ad;
    private int currentIndex = -1;
    private List<Advertisement> allAds = new();

    protected override void OnInitialized()
    {
        allAds = AuthState.CurrentUser.ViewAdvertisements(new AdvertisementFilterDto());
        currentIndex = allAds.FindIndex(a => a.Id == Id);
        ad = allAds.FirstOrDefault(a => a.Id == Id);
    }

    private void GoToAd(int index)
    {
        if (index >= 0 && index < allAds.Count)
        {
            Navigation.NavigateTo($"/ad/{allAds[index].Id}");
        }
    }

    private string GetPrice()
    {
        if (ad is SellingAdvertisement s)
            return $"{s.Price} $";
        if (ad is BuyingAdvertisement b)
            return $"{b.Price} $";
        return "-";
    }

    private void ContactSeller()
    {
        if (ad == null) return;
        if (AuthState.CurrentUser is Guest)
        {
            Navigation.NavigateTo("/signin");
            return;
        }
        if (AuthState.CurrentUser is RegisteredUser user)
        {
            try
            {
                var chat = user.ContactAdvertisementOwner(ad.Id);
                Navigation.NavigateTo($"/chat/{chat.Id}");
            }
            catch (Exception ex)
            {
                // Optionally show error to user
            }
        }
    }
}

@if (ad == null)
{
    <MudText Typo="Typo.h6">Advertisement not found.</MudText>
}
else
{
    <MudContainer MaxWidth="MaxWidth.False" Class="mt-6 d-flex flex-column align-items-center">
        <div style="width: 320px; height: 320px; background: #d3d3d3; display: flex; align-items: center; justify-content: center; border: 1px solid #bbb; margin-bottom: 8px;">
            <span style="color: #aaa; font-size: 2rem;">Image</span>
        </div>
        <div class="d-flex mb-2" style="gap: 16px;">
            <MudButton Variant="Variant.Outlined" Disabled="@(currentIndex <= 0)" OnClick="@(() => GoToAd(currentIndex - 1))">Previous</MudButton>
            <MudButton Variant="Variant.Outlined" Disabled="@(currentIndex == -1 || currentIndex >= allAds.Count - 1)" OnClick="@(() => GoToAd(currentIndex + 1))">Next</MudButton>
        </div>
        <MudText Typo="Typo.h5">@ad.Title</MudText>
        <MudText Typo="Typo.h6">@GetPrice()</MudText>
        <MudPaper Class="p-3 mt-2 mb-4" Style="width: 100%; max-width: 320px; min-height: 100px; background: #f8f8f8;">
            <MudText Typo="Typo.body2">@ad.Description</MudText>
        </MudPaper>
        @if (!(AuthState.CurrentUser is RegisteredUser registeredUser && ad.OwnerId == registeredUser.Id))
        {
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Style="width: 100%; max-width: 320px;" OnClick="ContactSeller">Contact seller</MudButton>
        }
    </MudContainer>
} 