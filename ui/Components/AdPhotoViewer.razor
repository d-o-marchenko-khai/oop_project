@using Microsoft.AspNetCore.Components

@if (ImageUrls != null && ImageUrls.Any())
{
    <div style="width: 100%; max-width: 320px; margin: auto;">
        <div style="width: 100%; padding-top: 100%; /* 1:1 Aspect Ratio */ position: relative; border: 1px solid #bbb; margin-bottom: 8px; overflow: hidden; display:flex; justify-content:center; align-items:center; background-color: #f0f0f0;">
            @if (!string.IsNullOrWhiteSpace(currentImageDisplayUrl))
            {
                <img src="@currentImageDisplayUrl" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: contain;" />
            }
            else
            {
                 <span style="color: #aaa; font-size: 1.5rem;">Loading...</span>
            }
        </div>

        @if (ImageUrls.Count > 1)
        {
            <div class="d-flex mb-2" style="gap: 16px; width: 100%; justify-content: center;">
                <MudButton Variant="Variant.Outlined" OnClick="ShowPreviousImage" Disabled="currentImageIndex <= 0">Previous</MudButton>
                <MudButton Variant="Variant.Outlined" OnClick="ShowNextImage" Disabled="currentImageIndex >= ImageUrls.Count - 1">Next</MudButton>
            </div>
        }
    </div>
}
else
{
    <div style="width: 100%; max-width: 320px; margin: auto; height: 320px; background: #d3d3d3; display: flex; align-items: center; justify-content: center; border: 1px solid #bbb; margin-bottom: 8px;">
        <span style="color: #aaa; font-size: 2rem;">No Image</span>
    </div>
}

@code {
    [Parameter]
    public List<string> ImageUrls { get; set; } = new List<string>();

    private string? currentImageDisplayUrl;
    private int currentImageIndex = 0;

    protected override void OnParametersSet()
    {
        if (ImageUrls != null && ImageUrls.Any())
        {
            currentImageIndex = 0;
            currentImageDisplayUrl = ImageUrls.First();
        }
        else
        {
            currentImageDisplayUrl = null;
        }
        base.OnParametersSet();
    }

    private void ShowPreviousImage()
    {
        if (currentImageIndex > 0)
        {
            currentImageIndex--;
            currentImageDisplayUrl = ImageUrls[currentImageIndex];
            StateHasChanged();
        }
    }

    private void ShowNextImage()
    {
        if (currentImageIndex < ImageUrls.Count - 1)
        {
            currentImageIndex++;
            currentImageDisplayUrl = ImageUrls[currentImageIndex];
            StateHasChanged();
        }
    }
} 